<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
    <title></title>
    <script src="js/jquery-1.9.0.min.js" type="text/javascript"></script>
    <script src="js/jquery.mobile-1.3.0-rc.1.js" type="text/javascript"></script>
    <link rel="stylesheet" href="css/a3.css">
    <link rel="stylesheet" href="css/custom.css">
    <link rel="stylesheet" href="css/jqm-demos.css">
    <link rel="stylesheet" href="css/jquery.mobile-1.3.0-rc.1.css">
    <script src="js/jquery.mobile.pagination.js" type="text/javascript"></script>
    <link rel="stylesheet" href="css/jquery.mobile.pagination.css">
</head>
<body>
	<div data-role="page" id="home">
		<div data-role="header" data-theme="b">
			<h1>My Favourite Things</h1>
		</div><!-- /header -->

		<div data-role="content">
			<div data-demo-html="true">
				<ul data-role="listview" data-inset="true">
					<li data-role="list-divider" hidden="true"> Welcome! </li>
					<li> This application will organize list of favourites in twitter. Swipe right on the bottom strip to start the application</li>
				</ul>
			</div>
		</div>

		<div class="jqm-footer" data-role="footer" data-position="fixed" data-theme="b">
			<ul data-role="listview" data-inset="true">
				<li id="StartApp" class="changePage">
					Let's start the application >>>>
					<input id='swipePageHome' type=hidden right='#page1'></input>
				</li>
			</ul>
		</div>
	</div>

</body>


<script type="text/javascript">
	/* Script for creating new page and inserting tweets */
    $.getJSON('favs.json', function (data) {
		var numPage = 1;			// number of pages
		var lastPage = 0;			// page # for last page
		var tweetsPerPage = 10;		// 10 tweets per page
		var count = 1;				// counter for # of tweets
        $.each(data, function (index) {
			if (count > tweetsPerPage)
			{ // if tweet count exceeds 10 per page, reset the count and increment pageNum
				count = 1;
				numPage = numPage + 1;
			}

			if (count == 1)
			{ // if count = 0, we need to make new page
				$('#tweet'+numPage-1).listview("refresh");
				makePage(numPage, lastPage);
				if (lastPage == 0)
				{	// if lastPage = 0, we are in the home page
					$('#swipePage'+numPage).attr("left", "#home");
				}
				else 
				{	// else assign left and right link.
					$('#swipePage'+lastPage).attr("right", "#page"+numPage);
					$('#swipePage'+numPage).attr("left", "#page"+lastPage);
				}
				lastPage = numPage; // set lastPage to the current page #
			}

			var tweet = this;
			var shtml='';
			shtml=shtml+'<li>';
			shtml=shtml+'<img class=listProfile src=\"' + tweet.user.profile_image_url_https + '\" />'; //profile picture
			shtml=shtml+'<h3>' + linkTweet(tweet) + '</h3>';
			shtml=shtml+'<p> Retweeted ' + tweet.retweet_count + ' times.</p>';
			shtml=shtml+'</li>';
			shtml=shtml+'<li data-theme="b" data-rel="popup" data-role="list-divider" data-mini=true><a href="#profile'+numPage+''+count+'" data-rel="popup" data-role="button" data-inline="true" data-transition="slidedown" data-position-to="window">User Info</a></li>'
			$('#tweet'+numPage).append(shtml);

			makePopUpProfile(tweet, numPage, count); // create user info page for each tweet
			count = count + 1;
        });

    });

	function makePage(numPage, lastPage) {
		//header
		var header = document.createElement('div');
		header.setAttribute('data-role', 'header');
		header.setAttribute('data-theme', 'b');
		var headerH = document.createElement('h1');
		var headerText = document.createTextNode("My Favourite Things");
		//page
		var newPage = document.createElement('div');
		newPage.setAttribute('data-role', 'page');
		newPage.setAttribute('id', 'page'+numPage);
		//page content
		var content = document.createElement('div');
		content.setAttribute('data-role', 'content');
		//demo-html
		var demoHtml = document.createElement('div');
		demoHtml.setAttribute('data-demo-html', 'true');
		//listview
		//data goes in here
		var tweet = document.createElement('ul');
		tweet.setAttribute('id', 'tweet'+numPage);
		tweet.setAttribute('data-role', 'listview');
		tweet.setAttribute('data-inset', 'true');
		// footer/swipe
		var footer = document.createElement('div');
		footer.setAttribute('class', 'jqm-footer');
		footer.setAttribute('data-role', 'footer');
		footer.setAttribute('data-position', 'fixed');
		footer.setAttribute('data-theme', 'b');
		var footerList = document.createElement('ul');
		footerList.setAttribute('data-role', 'listview');
		footerList.setAttribute('data-inset', 'true');
		var swipe = document.createElement('li');
		swipe.setAttribute('id', 'swipe'+numPage);
		swipe.setAttribute('class', 'changePage');
		var swipeValue = document.createElement('input');
		swipeValue.setAttribute('id', 'swipePage'+numPage);
		swipeValue.setAttribute('type', 'hidden');
		var swipeText = document.createTextNode("<<<< swipe to navigate page >>>>");
		
		swipe.appendChild(swipeText);
		swipe.appendChild(swipeValue);
		footerList.appendChild(swipe);
		footer.appendChild(footerList);

		demoHtml.appendChild(tweet);
		content.appendChild(demoHtml);
		
		headerH.appendChild(headerText);
		header.appendChild(headerH);

		newPage.appendChild(header);
		newPage.appendChild(content);
		newPage.appendChild(footer);

		$('body').append(newPage);
	}
	
	/*
	 * opens new window with url
	 */
	function newwindow(url){
		window.open(url);
	}
	
	/* sort link by indices using bubble sort method (no user will have many urls, mentions, hashtags. Thus bubble sort is efficient enough)*/
	function sortLink(link) {
		var j = 0;
		var not_done = 1;
		var temp;
		while(not_done) {
			not_done = 0;
			j++;
			for (var i = 0; i < link.length - j ; i++) {
				if (link[i].indices[0] > link[i + 1].indices[0]) {
					temp = link[i];
					link[i] = link[i + 1];
					link[i + 1] = temp;
					not_done = 1;
				}
			}
		}
		return link;
	}

	/* link urls, user mentions, and hashtags to the text */
	function linkTweet(tweet) {
		var hashtag = tweet.entities.hashtags;
		var urls = tweet.entities.urls;
		var user = tweet.entities.user_mentions;
		var media = tweet.entities.media;
		var text = tweet.text;
		var newText = '';
		var link = [];

		if (hashtag) {
			for (var i = 0; i < hashtag.length; i++){
				link.push({"type":"hashtag", "text":hashtag[i].text, "indices":hashtag[i].indices});
			}
		}

		if (urls) {
			for (var i = 0; i < urls.length; i++) {
				link.push({"type":"url", "url":urls[i].url, "display":urls[i].display_url, "indices":urls[i].indices});
			}
		}

		if (user) {
			for (var i = 0; i < user.length; i++) {
				link.push({"type":"user", "screen_name":user[i].screen_name, "indices":user[i].indices});
			}
		}

		if (media) {
			for (var i = 0; i < media.length; i++) {
				link.push({"type":"media", "url":media[i].url, "display":media[i].display_url, "indices":media[i].indices});
			}
		}
		link = sortLink(link);
		var start = 0;
		for (var i = 0; i < link.length; i++) {
			var end = link[i].indices[0];
			newText = newText + text.substring(start, end);
			var type = link[i].type;
			if (type == "hashtag")
			{
				newText = newText +  "<a href='#' class='hash' onclick=newwindow('https://twitter.com/search?q=%23"+link[i].text+"&src=hash')>#"+link[i].text+"</a> ";
			}
			if (type == "url")
			{
				newText = newText +  "<a href='#' class ='link' onclick=newwindow('"+link[i].url+"') >"+link[i].display+"</a> ";
			}
			if (type == "user")
			{
				newText = newText +  "<a href='#' class ='mention' onclick=newwindow('https://twitter.com/"+link[i].screen_name+"') >@"+link[i].screen_name+"</a> ";
			}
			if (type == "media")
			{
				newText = newText +  "<a href='#' class ='media' onclick=newwindow('"+link[i].url+"') >"+link[i].display+"</a> ";
			}
			start = link[i].indices[1];
		}
		return newText;
	}
	
	/* make profile card for each user in pop-up window */
	function makePopUpProfile (tweet, numPage, count) {
		var id = 'profile'+numPage +''+count;
		var popup = document.createElement('div');
		popup.setAttribute('data-role', 'popup');
		popup.setAttribute('id', id);
		popup.setAttribute('class', 'ui-content');
		popup.setAttribute('data-dismissible', 'false');
		popup.setAttribute('data-overlay-theme', 'a');

		var a = document.createElement('a');
		a.setAttribute('href', '#');
		a.setAttribute('data-rel', 'back');
		a.setAttribute('data-role', 'button');
		a.setAttribute('data-theme', 'a');
		a.setAttribute('data-icon', 'delete');
		a.setAttribute('data-iconpos', 'notext');
		a.setAttribute('class', 'ui-btn-right');
		var aText = document.createTextNode("Close");
		a.appendChild(aText);
		
		var background = document.createElement('div');
		background.setAttribute('class', 'profile-header-inner');
		background.setAttribute('style', 'word-wrap: break-word; min-height: 260px; max-width: 520px; position: relative; margin-left:auto; margin-right:auto; background-image: url("https://abs.twimg.com/a/1364441607/t1/img/grey_header_web.png");');
		
		var profileImg = document.createElement('img');
		profileImg.setAttribute('class', 'profpic');
		profileImg.setAttribute('src', tweet.user.profile_image_url_https);
		
		var name = document.createElement('p');
		name.setAttribute('class', 'fullname');
		var nameText = document.createTextNode(tweet.user.name+'  ');
		name.appendChild(nameText);
		
		if (tweet.user.verified) {
			var verified = document.createElement('img');
			verified.setAttribute('class', 'verified');
			verified.setAttribute('src', 'https://si0.twimg.com/help/1307051362_737');
			name.appendChild(verified);
		}
		
		var screenName = document.createElement('p');
		screenName.setAttribute('class', 'screenname');
		var screenText = document.createTextNode('@'+tweet.user.screen_name);
		screenName.appendChild(screenText);
		
		var description = document.createElement('p');
		description.setAttribute('class', 'des');
		var desText = document.createTextNode(tweet.user.description);
		description.appendChild(desText);
		
		var loc = document.createElement('p');
		loc.setAttribute('class', 'location');
		var locText = document.createTextNode(tweet.user.location + "  " + tweet.user.url);
		if (tweet.user.entities.url.urls.expanded_url) {
			var locText = document.createTextNode(tweet.user.location + "  " + tweet.user.entities.url.urls.expanded_url);
		}
		
		loc.appendChild(locText);
		
		background.appendChild(profileImg);
		background.appendChild(name);
		background.appendChild(screenName);
		background.appendChild(description);
		background.appendChild(loc);
		
		popup.appendChild(a);
		popup.appendChild(background);

		$('#page'+numPage).append(popup);
	}
</script>


<script type="text/javascript">
	/* Script for swipe event */
	$(document).on('pagebeforecreate', function() {
		$(".changePage").swiperight(function(event) {
				var target = $(this).find("input").attr("right");
				if (target == undefined) {
					alert("You are in the last page of the application!");
					event.stopImmediatePropagation();
				}
				$.mobile.changePage(target);
				event.stopImmediatePropagation();
		});

		$(".changePage").swipeleft(function(event) {
				var target = $(this).find("input").attr("left");
				if (target == undefined) {
					alert("You are in the first page of the application!");
					event.stopImmediatePropagation();
				}
				$.mobile.changePage(target);
				event.stopImmediatePropagation();
		});

	});
</script>

<style>
	/* Extra CSS code */
	img.listProfile {
		height:80px;
		width:80px;
	}
	img.profpic {
		position:relative;
		top:15px;
		width:73px;
		height:73px;
		border: 3px solid white;
		margin-left:auto;
		margin-right:auto;
		display: block;
	}
	p.fullname {
		font-size: 18pt;
		position:relative;
		color: white;
		text-align:center;
 	}
	p.screenname {
		text-align:center;
		color:white;
	}
	p.des {
		padding-left:15px;
		padding-right:15px;
		text-align:center;
		color:white;
		position:relative;
	}
	p.location {
		text-align:center;
		color:white;
		position:relative;
		padding-bottom:15px;
	}
	.ui-li-heading{
		white-space: normal;
		word-wrap: break-word;
	}
	li.changePage {
		text-align:center;
	}
</style>
</html>
